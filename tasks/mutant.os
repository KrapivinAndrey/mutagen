#Использовать 1testrunner
#Использовать asserts
#Использовать ".."


Функция ПровестиТестирование(КаталогТестов)
	
	Тестер = Новый Тестер;
	Тестер.ВыключитьОтладкуВЛогахЗапускаемыхСкриптовOnescript();
	Результат = Тестер.ТестироватьКаталог(КаталогТестов);

	Возврат Результат;

КонецФункции

КаталогПроекта = ОбъединитьПути(ТекущийСценарий().Каталог, "..");
КаталогТестов = Новый Файл(ОбъединитьПути(КаталогПроекта, "tests"));

// Первый этап. Запуск тестов без изменения

Результат = ПровестиТестирование(КаталогТестов);
Утверждения.ПроверитьРавенство(Результат, 0, "Тесты и так не работают");

ФайлыДляМутаций = Новый Массив;
ФайлыДляМутаций.Добавить("ЗаменаАрифметическихОпераций");
ФайлыДляМутаций.Добавить("БыстрыйВыход");
ФайлыДляМутаций.Добавить("ЗаменаБулевыхОпераций");
ФайлыДляМутаций.Добавить("ЗаменаСтрок");
ФайлыДляМутаций.Добавить("ЗаменаЧисел");

ВсегоМутантов = 0;
УбитоМутантов = 0;

Мутации = Новый Массив;
ОбщегоНазначения.ПодключитьМутантов();
Для Каждого Мутация Из ОбщегоНазначения.ДоступныеМутанты() Цикл

	Мутации.Добавить(Вычислить("Новый " + Мутация.Класс));
	
КонецЦикла;



Для Каждого ФайлМутант Из ФайлыДляМутаций Цикл

	Сообщить("Мутации для: " + ФайлМутант);

	ФайлСКодом = "./src/Мутанты/" + ФайлМутант + ".os";

	// Сохраним файл для того, чтобы потом восстановить

	Файл = Новый ЧтениеТекста(ФайлСКодом, КодировкаТекста.UTF8);
	ИсходныйКод = Файл.Прочитать();
	Файл.Закрыть();

	Запись = Новый ЗаписьТекста();
	
	ВсеМутанты = Кодогенерация.ВыполнитьЗаменыВКоде(ИсходныйКод, Мутации);
	ВсегоМутантов = ВсегоМутантов + ВсеМутанты.Количество();
	ВыжившиеМутанты = Новый Массив;
	КаталогВыгрузки = "build/" + ФайлМутант;

	Для Каждого КлючМутант Из ВсеМутанты Цикл

		Запись.Открыть(ФайлСКодом, КодировкаТекста.UTF8);
		Запись.Записать(КлючМутант.Значение);
		Запись.Закрыть();

		Результат = ПровестиТестирование(КаталогТестов);

		Если Результат <> 0 Тогда

			УбитоМутантов = УбитоМутантов + 1;

		Иначе

			ВыжившиеМутанты.Добавить(КлючМутант);

		КонецЕсли;

	КонецЦикла;

	Запись.Открыть(ФайлСКодом, КодировкаТекста.UTF8);
	Запись.Записать(ИсходныйКод);
	Запись.Закрыть();

	ОбщегоНазначения.СоздатьФайлыСМутантами(ВыжившиеМутанты, КаталогВыгрузки, ".os");

КонецЦикла;

Сообщить("Всего мутантов: " + ВсегоМутантов);
Сообщить("Убито мутантов: " + УбитоМутантов);
Сообщить("--------------------------------------");
Сообщить("MSI = " + Формат(УбитоМутантов/ВсегоМутантов * 100, "ЧДЦ=0; ЧН=0") + "%");