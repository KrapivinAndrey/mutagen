#Использовать asserts
#Использовать "../src"

Перем ЮнитТест;

Перем КодРавно;
Перем КодНеРавно;
Перем КодБольше;
Перем КодМеньше;
Перем КодБольшеИлиРавно;
Перем КодМеньшеИлиРавно;

// Процедура выполняется перед запуском теста
//
Процедура ПередЗапускомТеста() Экспорт
	
	Кодогенерация.ПодключитьМутантов();
	
КонецПроцедуры // ПередЗапускомТеста()

Функция МутацииДляТеста()

	Мутант = Новый ЗаменаБулевыхОпераций();
	Мутации = Новый Массив;
	Мутации.Добавить(Мутант);

	Возврат Мутации;

КонецФункции

// Функция возвращает список тестов для выполнения
//
// Параметры:
//    Тестирование    - Тестер        - Объект Тестер (1testrunner)
//    
// Возвращаемое значение:
//    Массив        - Массив имен процедур-тестов
//    
Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	ЮнитТест = Тестирование;
	СписокТестов = Новый Массив;

	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаРавно");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаНеРавно");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаБольше");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаМеньше");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаБольшеИлиРавно");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаМеньшеИлиРавно");

	Возврат СписокТестов;

КонецФункции

Процедура ТестДолжен_СформироватьМутанта(ИсходныйКод, КонтрольноеЗначение)

	Мутации = МутацииДляТеста();
	Результат = Кодогенерация.ВыполнитьЗаменыВКоде(ИсходныйКод, Мутации);

	Ожидаем.Что(Результат.Количество(), "Должна быть одна мутация").Равно(1);
	Для Каждого ИмяКод Из Результат Цикл

		Ожидаем.Что(ИмяКод.Значение).Равно(КонтрольноеЗначение);

	КонецЦикла;

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаРавно() Экспорт

	ТестДолжен_СформироватьМутанта(КодРавно, КодНеРавно);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаНеРавно() Экспорт

	ТестДолжен_СформироватьМутанта(КодНеРавно, КодРавно);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаБольше() Экспорт

	ТестДолжен_СформироватьМутанта(КодБольше, КодМеньше);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаМеньше() Экспорт

	ТестДолжен_СформироватьМутанта(КодМеньше, КодБольше);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаБольшеИлиРавно() Экспорт

	ТестДолжен_СформироватьМутанта(КодБольшеИлиРавно, КодМеньшеИлиРавно);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаМеньшеИлиРавно() Экспорт

	ТестДолжен_СформироватьМутанта(КодМеньшеИлиРавно, КодБольшеИлиРавно);

КонецПроцедуры

КодРавно			= "а = 5; б = (а = 10);";
КодНеРавно			= "а = 5; б = (а <> 10);";
КодБольше			= "а = 5; б = (а > 10);";
КодМеньше			= "а = 5; б = (а < 10);";
КодБольшеИлиРавно	= "а = 5; б = (а >= 10);";
КодМеньшеИлиРавно	= "а = 5; б = (а <= 10);";
