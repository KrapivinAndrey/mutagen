#Использовать asserts
#Использовать "../src"

Перем ЮнитТест;

Перем КодСложение;
Перем КодВычетание;
Перем КодУмножение;
Перем КодДеление;

// Процедура выполняется перед запуском теста
//
Процедура ПередЗапускомТеста() Экспорт
	
	Кодогенерация.ПодключитьМутантов();
	
КонецПроцедуры // ПередЗапускомТеста()

Функция МутацииДляТеста()

	Мутант = Новый ЗаменаАрифметическихОпераций();
	Мутации = Новый Массив;
	Мутации.Добавить(Мутант);

	Возврат Мутации;

КонецФункции

// Функция возвращает список тестов для выполнения
//
// Параметры:
//    Тестирование    - Тестер        - Объект Тестер (1testrunner)
//    
// Возвращаемое значение:
//    Массив        - Массив имен процедур-тестов
//    
Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	ЮнитТест = Тестирование;
	СписокТестов = Новый Массив;

	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаСложение");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаВычетание");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаУмножение");
	СписокТестов.Добавить("ТестДолжен_СформироватьМутантаДеление");

	Возврат СписокТестов;

КонецФункции

Процедура ТестДолжен_СформироватьМутанта(ИсходныйКод, КонтрольноеЗначение)

	Мутации = МутацииДляТеста();
	Результат = Кодогенерация.ВыполнитьЗаменыВКоде(ИсходныйКод, Мутации);

	Ожидаем.Что(Результат.Количество(), "Должна быть одна мутация").Равно(1);
	Для Каждого ИмяКод Из Результат Цикл

		Ожидаем.Что(ИмяКод.Значение).Равно(КонтрольноеЗначение);

	КонецЦикла;

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаСложение() Экспорт

	ТестДолжен_СформироватьМутанта(КодСложение, КодДеление);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаВычетание() Экспорт

	ТестДолжен_СформироватьМутанта(КодВычетание, КодУмножение);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаУмножение() Экспорт

	ТестДолжен_СформироватьМутанта(КодУмножение, КодСложение);

КонецПроцедуры

Процедура ТестДолжен_СформироватьМутантаДеление() Экспорт

	ТестДолжен_СформироватьМутанта(КодДеление, КодВычетание);

КонецПроцедуры

КодСложение = "Результат = а + б;";
КодВычетание = "Результат = а - б;";
КодУмножение = "Результат = а * б;";
КодДеление = "Результат = а / б;";