#Использовать logos

Перем Лог;

Перем Исходники;
Перем КаталогВыгрузки;
Перем Мутации;

Процедура ОписаниеКоманды(Команда) Экспорт

	Команда.Аргумент("SRC", "", "Путь к файлу исходников. Например: module.bsl")
		.ТСтрока()
		.ВОкружении("MUTANT_SRC");

	Команда.Аргумент("OUTPUT", "", "Каталог для хранения результатов")
		.ТСтрока()
		.ВОкружении("MUTANT_RESULT");

	Команда.Опция("skip", "", "Пропуск мутаций. Необходимо указать ИДЕНТИФИКАТОР через запятую").ТСтрока();

	Команда.Опция("v verbose", Ложь, "Режим отладки")
		.ТБулево()
		.СкрытьВСправке();

КонецПроцедуры

Процедура ВыполнитьКоманду(Знач Команда) Экспорт
	ИнициализацияПараметров(Команда);
	Сообщить("Мут-мут");
КонецПроцедуры

Процедура ИнициализацияПараметров(Знач Команда)

	Если Команда.ЗначениеОпции("verbose") Тогда

		Лог.УстановитьУровень(УровниЛога.Отладка);

	КонецЕсли;

	Исходники = Команда.ЗначениеАргумента("SRC");
	Лог.Отладка("Исходники для мутаций: " + Исходники);

	Если Не ОбщегоНазначения.ФайлСуществует(Исходники) Тогда

		Лог.Ошибка(СтрШаблон("Нет файла исходников <%1>", Исходники));
		ЗавершитьРаботу(1);

	КонецЕсли;

	КаталогРезультата = Команда.ЗначениеАргумента("OUTPUT");
	Лог.Отладка("Каталог для сохранения результатов: " + КаталогРезультата);

	Если Не ОбщегоНазначения.КаталогСуществует(КаталогРезультата) Тогда

		СоздатьКаталог(ОбщегоНазначения.АбсолютныйПуть(КаталогРезультата));

	КонецЕсли;

	Искл = Команда.ЗначениеОпции("skip");
	ИсключаемыеМутации = СтрРазделить(Искл, ",");

	Мутации = Новый Массив;
	Для Каждого Мутация Из ОбщегоНазначения.ДоступныеМутанты() Цикл

		Если ИсключаемыеМутации.Найти(Мутация.Идентификатор) <> Неопределено Тогда

			Лог.Информация("Исключена мутация: " + Мутация.Идентификатор);
			Продолжить;
		
		КонецЕсли;

		Мутации.Добавить(Вычислить("Новый " + Мутация.Класс));

	КонецЦикла;

	Если Мутации.Количество() = 0 Тогда

		Лог.Ошибка("Не осталось мутаций для применения");
		ЗавершитьРаботу(1);

	КонецЕсли;

КонецПроцедуры

Лог = ПараметрыПриложения.Лог();